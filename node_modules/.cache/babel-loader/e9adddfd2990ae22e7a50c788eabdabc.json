{"ast":null,"code":"import _objectSpread from \"/Users/phillip/Development/vhosts/playground.develop/good-green/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/phillip/Development/vhosts/playground.develop/good-green/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/phillip/Development/vhosts/playground.develop/good-green/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/phillip/Development/vhosts/playground.develop/good-green/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/phillip/Development/vhosts/playground.develop/good-green/node_modules/@babel/runtime/helpers/esm/inherits\";\n\nvar _this2 = this,\n    _jsxFileName = \"/Users/phillip/Development/vhosts/playground.develop/good-green/src/components/naughty-list/index.js\";\n\nimport React, { Component } from 'react';\nimport { ListGroup, Container, Row, Col } from 'reactstrap';\nimport ReactPaginate from 'react-paginate';\nimport SearchResult from '../search-result'; // import { push } from 'connected-react-router'\n// import { bindActionCreators } from 'redux'\n// import { connect } from 'react-redux'\n// import ReactTable from \"react-table\";\n// Components\n\nvar NaughtyList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NaughtyList, _Component);\n\n  function NaughtyList(props) {\n    var _this;\n\n    _classCallCheck(this, NaughtyList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NaughtyList).call(this, props));\n\n    _this.saveData = function (data) {\n      return new Promise(function (resolve, reject) {\n        console.log(data);\n      });\n    };\n\n    _this.state = {\n      violators: {},\n      violatorsOrdered: []\n    }; // Loop through all the licenses and grab the details we need\n\n    _this.getNaughty();\n\n    return _this;\n  } // This function will save the data and keep on truckin\n  // function getData() {\n  //    return new Promise((resolve, reject)=>{\n  //        $.ajax({\n  //            url: `http://www.omdbapi.com/?t=The+Matrix`,\n  //            method: 'GET'\n  //            }).done((response)=>{\n  //                //this means my api call suceeded, so I will call resolve on the response\n  //                resolve(response);\n  //            }).fail((error)=>{\n  //                //this means the api call failed, so I will call reject on the error\n  //                reject(error);\n  //            });\n  //    });\n\n\n  return NaughtyList;\n}(Component); // This will make the API call to get all violators grouped by violation count\n\n\ngetNaughty = function getNaughty() {\n  var naughtyCall = ['https://data.lcb.wa.gov/resource/dgm4-3cm6.json?'];\n  naughtyCall.push('$select=license_number,count(penalty_type)');\n  naughtyCall.push('&$group=(license_number)&$order=count(penalty_type)desc');\n  fetch(naughtyCall.join('')).then(function (response) {\n    return response.json();\n  }).then(_this2.saveData).then(_this2.getLicenseData);\n}; // This will take the Naughty data from the getNaughty function and add either add the appropriate license \n// data or delete the entry if no license data can be found (why that happens, IDK)\n\n\ngetLicenseData = function getLicenseData(data) {} // let justLics = data.map((violator)=>{violator.license_number});\n// \n// This call uses the justLics array to get all of them at ones (or try)\n// let licDetailsCall = ['https://data.lcb.wa.gov/resource/bhbp-x4eb.json?'];\n// licDetailsCall.push('$where=license in (\"'+licNums.join('\",\"')+'\") ')\n// fetch(licDetailsCall.join('')).then(response => response.json()).then(this.storeLicenseDetails)\n// \n// console.log(justLics);\n// This will grab the basic license information for the procided license number\n;\n\ngetLicenseDetails = function getLicenseDetails(licNums) {\n  var licDetailsCall = ['https://data.lcb.wa.gov/resource/bhbp-x4eb.json?'];\n  licDetailsCall.push('$where=license in (\"' + licNums.join('\",\"') + '\") ');\n  fetch(licDetailsCall.join('')).then(function (response) {\n    return response.json();\n  }).then(_this2.storeLicenseDetails);\n}; // Simply saves above\n\n\nstoreLicenseDetails = function storeLicenseDetails(data) {\n  var tempState = _this2.state;\n  data.forEach(function (lic) {\n    if (tempState.violators[lic.license] === undefined) {\n      tempState.violators[lic.license] = {};\n    }\n\n    tempState.violators[lic.license] = _objectSpread({}, tempState.violators[lic.license], lic);\n  });\n\n  _this2.setState(tempState);\n}; // Determins the naughtiness of each license number, stored in a violators object, with the specific WAC codes in a seperate one\n\n\ncalculateNaughtiness = function calculateNaughtiness(data) {\n  var tempState = _this2.state; // This will load up the violators deatils for the listing\n\n  data.forEach(function (violator) {\n    var lic = violator.license_number;\n    tempState.violators[lic] = {};\n    tempState.violators[lic].license_number = lic;\n    tempState.violators[lic].violations = violator.count_penalty_type;\n    tempState.violatorsOrdered.push(lic);\n  });\n\n  _this2.setState(tempState);\n\n  _this2.getLicenseDetails(Object.keys(tempState.violators));\n}; // Simply loops to call the list and renders it out, shared the SearchResults component.\n\n\ndisplayList = function displayList() {\n  var results = [];\n  var safety = 0; // This will stop it quickly if the list is not loaded enough to provide results, if it ever finds 5 blank licenses it will stop\n\n  var index = 0;\n\n  while (results.length < _this2.state.limitor && safety < 5) {\n    var lic = _this2.state.violatorsOrdered[index];\n\n    if (_this2.state.violators[lic] !== undefined && _this2.state.violators[lic].organization !== undefined) {\n      // So it's a good one, push it and reset the safty check\n      results.push(React.createElement(SearchResult, {\n        data: _this2.state.violators[lic],\n        type: \"naughtyList\",\n        key: 'naughtyList' + lic,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }));\n      safety = 0;\n    } else {\n      safety++;\n    }\n\n    index++;\n  }\n\n  return results;\n};\n\nrender = function render() {\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"This is the naughty page, its kinda mess at the moment\")), React.createElement(ListGroup, {\n    className: 'row',\n    flush: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, _this2.displayList()));\n}; //}\n// <pre>{JSON.stringify(this.state,null,2)}</pre>\n\n\nexport default NaughtyList;","map":{"version":3,"sources":["/Users/phillip/Development/vhosts/playground.develop/good-green/src/components/naughty-list/index.js"],"names":["React","Component","ListGroup","Container","Row","Col","ReactPaginate","SearchResult","NaughtyList","props","saveData","data","Promise","resolve","reject","console","log","state","violators","violatorsOrdered","getNaughty","naughtyCall","push","fetch","join","then","response","json","getLicenseData","getLicenseDetails","licNums","licDetailsCall","storeLicenseDetails","tempState","forEach","lic","license","undefined","setState","calculateNaughtiness","violator","license_number","violations","count_penalty_type","Object","keys","displayList","results","safety","index","length","limitor","organization","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { ListGroup, Container, Row, Col } from 'reactstrap';\nimport ReactPaginate from 'react-paginate';\nimport SearchResult from '../search-result'\n// import { push } from 'connected-react-router'\n// import { bindActionCreators } from 'redux'\n// import { connect } from 'react-redux'\n// import ReactTable from \"react-table\";\n\n// Components\n\nclass NaughtyList extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tviolators: {},\n\t\t\tviolatorsOrdered: [],\n\t\t};\n\t\t// Loop through all the licenses and grab the details we need\n\t\tthis.getNaughty();\n\t}\n\n\t// This function will save the data and keep on truckin\n\tsaveData = (data) => {\n\t\treturn new Promise((resolve,reject)=>{\n\t\t\tconsole.log(data);\n\t\t});\n\t}\n\t// function getData() {\n //    return new Promise((resolve, reject)=>{\n //        $.ajax({\n //            url: `http://www.omdbapi.com/?t=The+Matrix`,\n //            method: 'GET'\n //            }).done((response)=>{\n //                //this means my api call suceeded, so I will call resolve on the response\n //                resolve(response);\n //            }).fail((error)=>{\n //                //this means the api call failed, so I will call reject on the error\n //                reject(error);\n //            });\n //    });\n}\n\n\t// This will make the API call to get all violators grouped by violation count\n\tgetNaughty = () => {\n\t\tlet naughtyCall = ['https://data.lcb.wa.gov/resource/dgm4-3cm6.json?'];\n\t\tnaughtyCall.push('$select=license_number,count(penalty_type)');\n\t\tnaughtyCall.push('&$group=(license_number)&$order=count(penalty_type)desc');\n\t\tfetch(naughtyCall.join('')).then(response => response.json()).then(this.saveData).then(this.getLicenseData)\n\t}\n\n\t// This will take the Naughty data from the getNaughty function and add either add the appropriate license \n\t// data or delete the entry if no license data can be found (why that happens, IDK)\n\tgetLicenseData = (data) => {\n\t\t// let justLics = data.map((violator)=>{violator.license_number});\n// \n\t\t// This call uses the justLics array to get all of them at ones (or try)\n\t\t// let licDetailsCall = ['https://data.lcb.wa.gov/resource/bhbp-x4eb.json?'];\n\t\t// licDetailsCall.push('$where=license in (\"'+licNums.join('\",\"')+'\") ')\n\t\t// fetch(licDetailsCall.join('')).then(response => response.json()).then(this.storeLicenseDetails)\n// \n\t\t// console.log(justLics);\n\t}\n\n\n\t// This will grab the basic license information for the procided license number\n\tgetLicenseDetails = (licNums) => {\n\t\tlet licDetailsCall = ['https://data.lcb.wa.gov/resource/bhbp-x4eb.json?'];\n\t\tlicDetailsCall.push('$where=license in (\"'+licNums.join('\",\"')+'\") ')\n\t\tfetch(licDetailsCall.join('')).then(response => response.json()).then(this.storeLicenseDetails)\n\t}\n\t// Simply saves above\n\tstoreLicenseDetails = (data) => {\n\t\tlet tempState = this.state\n\t\tdata.forEach((lic)=>{\n\t\t\tif(tempState.violators[lic.license]===undefined){\n\t\t\t\ttempState.violators[lic.license] = {};\n\t\t\t}\n\t\t\ttempState.violators[lic.license] = {...tempState.violators[lic.license],...lic}\n\t\t})\n\t\tthis.setState(tempState);\n\t}\n\n\t// Determins the naughtiness of each license number, stored in a violators object, with the specific WAC codes in a seperate one\n\tcalculateNaughtiness = (data) => {\n\t\tlet tempState = this.state\n\n\t\t// This will load up the violators deatils for the listing\n\t\tdata.forEach((violator)=>{\n\t\t\tlet lic = violator.license_number\n\t\t\ttempState.violators[lic] = {};\n\t\t\ttempState.violators[lic].license_number = lic\n\t\t\ttempState.violators[lic].violations = violator.count_penalty_type\n\t\t\ttempState.violatorsOrdered.push(lic)\n\t\t});\n\t\tthis.setState(tempState);\n\t\tthis.getLicenseDetails(Object.keys(tempState.violators))\n\n\t}\n\n\t// Simply loops to call the list and renders it out, shared the SearchResults component.\n\tdisplayList = () => {\n\t\tlet results = [];\n\t\tlet safety = 0; // This will stop it quickly if the list is not loaded enough to provide results, if it ever finds 5 blank licenses it will stop\n\t\tlet index = 0;\n\t\twhile(results.length<this.state.limitor && safety<5){\n\t\t\tlet lic = this.state.violatorsOrdered[index];\n\t\t\tif( this.state.violators[lic] !== undefined && this.state.violators[lic].organization !== undefined){\n\t\t\t\t// So it's a good one, push it and reset the safty check\n\t\t\t\tresults.push(<SearchResult data={this.state.violators[lic]} type=\"naughtyList\" key={'naughtyList'+lic}/>);\n\t\t\t\tsafety=0;\n\t\t\t}else{\n\t\t\t\tsafety++;\n\t\t\t}\n\t\t\tindex++;\n\t\t}\n\t\treturn results;\n\t}\n\n\trender = () => { \n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>This is the naughty page, its kinda mess at the moment</Col>\n\t\t\t\t</Row>\n\t\t\t\t<ListGroup className={'row'} flush>\n\t\t\t\t\t{this.displayList()}\n\t\t\t\t</ListGroup>\n\t\t\t</Container>\n\t\t)\n\t}\n//}\n\t\t\t\t// <pre>{JSON.stringify(this.state,null,2)}</pre>\n\nexport default NaughtyList;"]},"metadata":{},"sourceType":"module"}