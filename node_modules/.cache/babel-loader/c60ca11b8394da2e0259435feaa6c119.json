{"ast":null,"code":"import _classCallCheck from \"/Users/phillip/Development/vhosts/playground.develop/good-green/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/phillip/Development/vhosts/playground.develop/good-green/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/phillip/Development/vhosts/playground.develop/good-green/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/phillip/Development/vhosts/playground.develop/good-green/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/phillip/Development/vhosts/playground.develop/good-green/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/phillip/Development/vhosts/playground.develop/good-green/src/components/home/index.js\";\nimport React, { Component } from 'react';\nimport ReactPaginate from 'react-paginate';\nimport { connect } from \"react-redux\";\nimport { saveSearchTerm as _saveSearchTerm, saveSearchResults as _saveSearchResults } from '../../actions.js'; // Components\n\nimport { Container, Row, Col, ListGroup } from 'reactstrap';\nimport SearchResult from '../search-result';\nimport SearchResultsMessage from '../search-results-message';\n\nvar Home =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Home, _Component);\n\n  function Home(props) {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Home).call(this, props));\n\n    _this.updateSearch = function (e) {\n      e.preventDefault();\n      var term = e.target.querySelector('#search-term').value; // Get a temp state then update\n\n      var tempState = _this.state;\n      tempState.input = term;\n      tempState.searchStatus = 'searching';\n\n      _this.setState(tempState); // Save it into the redux store\n\n\n      _this.props.saveSearchTerm(term); // Get the search results (via the API)\n\n\n      _this.getSearchResults();\n    };\n\n    _this.getSearchResults = function () {\n      // Clean up the term\n      var pTerm = _this.state.input.toUpperCase(); // This will create a nice long query\n\n\n      var searchCall = ['https://data.lcb.wa.gov/resource/bhbp-x4eb.json?'];\n      searchCall.push('$where=organization%20like%20%27%25' + pTerm + '%25%27');\n      searchCall.push('or license%20like%20%27' + pTerm + '%25%27');\n      searchCall.push('or ubi%20like%20%27' + pTerm + '%25%27');\n      searchCall.push('&$order=%20organization'); // Fetch the data\n\n      fetch(searchCall.join('')).then(function (response) {\n        return response.json();\n      }).then(_this.storeSearchResults);\n    };\n\n    _this.storeSearchResults = function (resultArray) {\n      // Get a temp state, update it, then setState\n      var tempState = _this.state;\n      tempState.results = resultArray;\n      tempState.searchStatus = 'completed';\n\n      _this.setState(tempState); // Save the search results to the react store\n\n\n      _this.props.saveSearchResults(resultArray);\n    };\n\n    _this.displaySearchResults = function () {\n      var page = _this.props.match.params.page;\n      page = page === undefined ? 1 : page;\n      var results = [];\n\n      for (var i = (page - 1) * _this.state.pageCount; i < page * _this.state.pageCount; i++) {\n        results.push(React.createElement(SearchResult, {\n          data: _this.state.results[i],\n          key: 'searchResultsLic' + _this.state.results[i].license,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }));\n      }\n\n      return results;\n    };\n\n    _this.state = {\n      input: _this.props.searchInput,\n      results: _this.props.searchResults,\n      searchStatus: 'waiting',\n      pageCount: 50\n    };\n\n    if (_this.state.results.length > 0) {\n      _this.state.searchStatus = 'completed';\n    }\n\n    return _this;\n  } // Simply updates the state and then starts the call against the API\n\n\n  _createClass(Home, [{\n    key: \"render\",\n    // Simple output, not really looking for a bnuch of hubub\n    value: function render() {\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"This is going to probally have some text blurb about what this thing does, maybe behind an appropriate background\"))), React.createElement(\"form\", {\n        onSubmit: this.updateSearch,\n        id: 'main-search-form',\n        className: 'row',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        placeholder: 'Enter a orginization name, license number, or UBI number.',\n        id: 'search-term',\n        name: 'search-term',\n        type: \"search\",\n        defaultValue: this.state.input,\n        className: 'col',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: 'col-sm-2',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Search\")), React.createElement(SearchResultsMessage, {\n        searchStatus: this.state.searchStatus,\n        resultCount: this.state.results.length,\n        resultsPerPage: this.state.pageCount,\n        pageNumber: this.props.match.params.page,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(ListGroup, {\n        className: 'row',\n        flush: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, this.displaySearchResults()), React.createElement(ReactPaginate, {\n        pageCount: Math.ceil(this.state.results.length / this.state.pageCount),\n        pageRangeDisplayed: 5,\n        marginPagesDisplayed: 3,\n        onPageChange: this.handlePageChange,\n        containerClassName: 'pagination justify-content-center',\n        pageClassName: 'page-item',\n        pageLinkClassName: 'page-link',\n        activeClassName: 'active',\n        breakClassName: 'page-link page-item disabled',\n        previousClassName: 'page-item',\n        nextClassName: 'page-item',\n        previousLinkClassName: 'page-link',\n        nextLinkClassName: 'page-link',\n        disabledClassName: 'disabled',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Home;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return state;\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    saveSearchTerm: function saveSearchTerm(term) {\n      dispatch(_saveSearchTerm(term));\n    },\n    saveSearchResults: function saveSearchResults(results) {\n      dispatch(_saveSearchResults(results));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home); // export default Home;","map":{"version":3,"sources":["/Users/phillip/Development/vhosts/playground.develop/good-green/src/components/home/index.js"],"names":["React","Component","ReactPaginate","connect","saveSearchTerm","saveSearchResults","Container","Row","Col","ListGroup","SearchResult","SearchResultsMessage","Home","props","updateSearch","e","preventDefault","term","target","querySelector","value","tempState","state","input","searchStatus","setState","getSearchResults","pTerm","toUpperCase","searchCall","push","fetch","join","then","response","json","storeSearchResults","resultArray","results","displaySearchResults","page","match","params","undefined","i","pageCount","license","searchInput","searchResults","length","Math","ceil","handlePageChange","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport ReactPaginate from 'react-paginate';\nimport { connect } from \"react-redux\";\nimport { saveSearchTerm, saveSearchResults } from '../../actions.js';\n\n// Components\nimport { Container, Row, Col, ListGroup } from 'reactstrap';\nimport SearchResult from '../search-result'\nimport SearchResultsMessage from '../search-results-message'\n\nclass Home extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tinput: this.props.searchInput,\n\t\t\tresults: this.props.searchResults,\n\t\t\tsearchStatus: 'waiting',\n\t\t\tpageCount: 50,\n\t\t}\n\t\tif(this.state.results.length>0){\n\t\t\tthis.state.searchStatus = 'completed'\n\t\t}\n\t}\n\n\t// Simply updates the state and then starts the call against the API\n\tupdateSearch = (e) => {\n\t\te.preventDefault()\n\t\tlet term = e.target.querySelector('#search-term').value\n\t\t\n\t\t// Get a temp state then update\n\t\tlet tempState = this.state\n\t\ttempState.input = term\n\t\ttempState.searchStatus = 'searching'\n\t\tthis.setState(tempState)\n\n\t\t// Save it into the redux store\n\t\tthis.props.saveSearchTerm(term); \n\n\t\t// Get the search results (via the API)\n\t\tthis.getSearchResults();\n\t}\n\n\t// This will make a call against the licenses enpoint with the search term. It's kinda messy but it searches against name, ubi, \n\t// and lic# since you can easily find one of those things on the packaging (or so I've been told).\n\tgetSearchResults = () => {\n\t\t// Clean up the term\n\t\tlet pTerm = this.state.input.toUpperCase();\n\n\t\t// This will create a nice long query\n\t\tlet searchCall = ['https://data.lcb.wa.gov/resource/bhbp-x4eb.json?'];\n\t\tsearchCall.push('$where=organization%20like%20%27%25'+pTerm+'%25%27');\n\t\tsearchCall.push('or license%20like%20%27'+pTerm+'%25%27');\n\t\tsearchCall.push('or ubi%20like%20%27'+pTerm+'%25%27');\n\t\tsearchCall.push('&$order=%20organization');\n\n\t\t// Fetch the data\n\t\tfetch(searchCall.join('')).then(response => response.json()).then(this.storeSearchResults)\n\t}\n\t// This stores the latest search results in the state for display later\n\tstoreSearchResults = (resultArray) => {\n\t\t// Get a temp state, update it, then setState\n\t\tlet tempState = this.state\n\t\ttempState.results = resultArray\n\t\ttempState.searchStatus = 'completed';\n\t\tthis.setState(tempState)\n\n\t\t// Save the search results to the react store\n\t\tthis.props.saveSearchResults(resultArray); \n\t}\n\n\t// Simply loops to call the SearchResult component\n\tdisplaySearchResults = () => {\n\t\tlet page = this.props.match.params.page;\n\t\tpage = page === undefined ? 1 : page;\n\t\tlet results = [];\n\n\t\tfor(let i = (page-1)*this.state.pageCount ; i < (page*this.state.pageCount) ; i++){\n\t\t\tresults.push(<SearchResult data={this.state.results[i]} key={'searchResultsLic'+this.state.results[i].license}/>)\n\t\t}\n\t\treturn results;\n\t}\n\n\t// Simple output, not really looking for a bnuch of hubub\n\trender(){ \n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t<Row><Col><p>This is going to probally have some text blurb about what this thing does, maybe behind an appropriate background</p></Col></Row>\n\t\t\t\t<form onSubmit={this.updateSearch} id={'main-search-form'} className={'row'}>\n\t\t\t\t  \t<input placeholder={'Enter a orginization name, license number, or UBI number.'} id={'search-term'} name={'search-term'} type=\"search\" defaultValue={this.state.input} className={'col'} />\n\t\t\t\t  \t<button className={'col-sm-2'}>Search</button>\n\t\t\t\t</form>\n\t\t\t\t<SearchResultsMessage searchStatus={this.state.searchStatus} resultCount={this.state.results.length} resultsPerPage={this.state.pageCount} pageNumber={this.props.match.params.page}/>\n\t\t\t\t<ListGroup className={'row'} flush>\n\t\t\t\t\t{this.displaySearchResults()}\n\t\t\t\t</ListGroup>\n\t\t\t\t<ReactPaginate \n\t\t\t\t\tpageCount={Math.ceil(this.state.results.length/this.state.pageCount)} \n\t\t\t\t\tpageRangeDisplayed={5} \n\t\t\t\t\tmarginPagesDisplayed={3} \n\t\t\t\t\tonPageChange={this.handlePageChange}\n\t\t\t\t\tcontainerClassName={'pagination justify-content-center'}\n\t\t\t\t\tpageClassName={'page-item'}\n\t\t\t\t\tpageLinkClassName={'page-link'}\n\t\t\t\t\tactiveClassName={'active'}\n\t\t\t\t\tbreakClassName={'page-link page-item disabled'}\n\t\t\t\t\tpreviousClassName={'page-item'}\n\t\t\t\t\tnextClassName={'page-item'}\n\t\t\t\t\tpreviousLinkClassName={'page-link'}\n\t\t\t\t\tnextLinkClassName={'page-link'}\n\t\t\t\t\tdisabledClassName={'disabled'}\n\t\t\t\t/>\n\t\t\t</Container>\n\t\t)\n\t}\n}\n\n\nconst mapStateToProps = (state) => {\n\treturn state;\n};\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tsaveSearchTerm: (term) => { dispatch(saveSearchTerm(term)) },\n\t\tsaveSearchResults: (results) => { dispatch(saveSearchResults(results)) \t}\n\t}\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(Home)\n\n// export default Home;"]},"metadata":{},"sourceType":"module"}