{"ast":null,"code":"import { combineReducers } from 'redux';\nvar InitialState = {};\n\nvar Reducer = function Reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : InitialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action) {\n    case 'test':\n      console.log('Reducer case \"test\".');\n      break;\n\n    default:\n      console.log('Reducer does not understand the \"' + action + '\" action.', action);\n      break;\n  }\n\n  return state;\n}; // export default combineReducers({\n//   todos,\n//   visibilityFilter\n// })\n// import { createStore } from 'redux'\n// const defaultState = {\n// \tsearchString: '',\n// \tsearchResults: [],\n// }\n// const store = createStore((state=defaultState,action='')=>{\n//     console.log('The reducer has just recived the following:','state',state,'action',action)\n//     return {state}\n// });\n\n\nexport default Reducer;","map":{"version":3,"sources":["/Users/phillip/Development/vhosts/playground.develop/good-green/src/reducer.js"],"names":["combineReducers","InitialState","Reducer","state","action","console","log"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AAEA,IAAMC,YAAY,GAAG,EAArB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAA+B;AAAA,MAA9BC,KAA8B,uEAAxBF,YAAwB;AAAA,MAAXG,MAAW;;AAC9C,UAAOA,MAAP;AACC,SAAK,MAAL;AACCC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACD;;AACA;AACCD,MAAAA,OAAO,CAACC,GAAR,CAAY,sCAAoCF,MAApC,GAA2C,WAAvD,EAAmEA,MAAnE;AACD;AAND;;AAQA,SAAOD,KAAP;AACA,CAVD,C,CAYA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEA,eAAeD,OAAf","sourcesContent":["import { combineReducers } from 'redux'\n\nconst InitialState = {};\n\nconst Reducer = (state=InitialState,action) => {\n\tswitch(action){\n\t\tcase 'test':\n\t\t\tconsole.log('Reducer case \"test\".')\n\t\tbreak;\n\t\tdefault:\n\t\t\tconsole.log('Reducer does not understand the \"'+action+'\" action.',action)\n\t\tbreak;\n\t}\n\treturn state\n}\n\n// export default combineReducers({\n//   todos,\n//   visibilityFilter\n// })\n\n// import { createStore } from 'redux'\n\n// const defaultState = {\n// \tsearchString: '',\n// \tsearchResults: [],\n// }\n\n// const store = createStore((state=defaultState,action='')=>{\n//     console.log('The reducer has just recived the following:','state',state,'action',action)\n//     return {state}\n// });\n\nexport default Reducer;"]},"metadata":{},"sourceType":"module"}