{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ElementScroller = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _ScrollManager = require(\"./ScrollManager\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar ManagedElementScroller =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ManagedElementScroller, _React$Component);\n\n  function ManagedElementScroller(props) {\n    var _this;\n\n    _classCallCheck(this, ManagedElementScroller);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ManagedElementScroller).call(this, props));\n    _this._ref = _react.default.createRef();\n    return _this;\n  }\n\n  _createClass(ManagedElementScroller, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._register();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._unregister(this.props);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      this._unregister(prevProps);\n\n      this._register();\n    }\n  }, {\n    key: \"_register\",\n    value: function _register() {\n      var _this$props = this.props,\n          manager = _this$props.manager,\n          scrollKey = _this$props.scrollKey;\n      var node = this._ref.current;\n\n      if (!manager) {\n        console.warn('ElementScroller only works when nested within a ScrollManager'); // eslint-disable-line no-console\n      } else if (scrollKey && node) {\n        manager._registerElement(scrollKey, node);\n      }\n    }\n  }, {\n    key: \"_unregister\",\n    value: function _unregister(props) {\n      var manager = props.manager,\n          scrollKey = props.scrollKey;\n\n      if (manager && scrollKey) {\n        manager._unregisterElement(scrollKey);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react.default.cloneElement(_react.default.Children.only(this.props.children), {\n        ref: this._ref\n      });\n    }\n  }]);\n\n  return ManagedElementScroller;\n}(_react.default.Component);\n\nManagedElementScroller.propTypes = {\n  manager: _propTypes.default.instanceOf(_ScrollManager.ScrollManager).isRequired,\n  scrollKey: _propTypes.default.string.isRequired,\n  children: _propTypes.default.element.isRequired\n};\nvar ElementScroller = (0, _ScrollManager.withManager)(ManagedElementScroller);\nexports.ElementScroller = ElementScroller;","map":null,"metadata":{},"sourceType":"script"}