{"ast":null,"code":"import _classCallCheck from \"/Users/phillip/Development/vhosts/playground.develop/good-green/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/phillip/Development/vhosts/playground.develop/good-green/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/phillip/Development/vhosts/playground.develop/good-green/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/phillip/Development/vhosts/playground.develop/good-green/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/phillip/Development/vhosts/playground.develop/good-green/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/phillip/Development/vhosts/playground.develop/good-green/src/components/details/index.js\";\nimport React, { Component } from 'react'; // import { Link } from 'react-router-dom'\n// import { push } from 'connected-react-router'\n// import { bindActionCreators } from 'redux'\n// import { connect } from 'react-redux'\n// import ReactTable from \"react-table\";\n// Components\n\nimport SearchResult from '../search-result';\n\nvar Detail =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Detail, _Component);\n\n  function Detail(props) {\n    var _this;\n\n    _classCallCheck(this, Detail);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Detail).call(this, props));\n\n    _this.getVisits = function () {\n      var visitsCall = ['https://data.lcb.wa.gov/resource/w7wg-8m52.json?'];\n      visitsCall.push('$where=license_number = \"' + _this.state.license + '\" ');\n      visitsCall.push('&$order=date desc');\n      fetch(visitsCall.join('')).then(function (response) {\n        return response.json();\n      }).then(_this.storeAPIResults.bind(null, 'visits'));\n    };\n\n    _this.getViolations = function () {\n      var violationsCall = ['https://data.lcb.wa.gov/resource/dgm4-3cm6.json?'];\n      violationsCall.push('$where=license_number = \"' + _this.state.license + '\" ');\n      violationsCall.push('&$order=visit_date desc');\n      fetch(violationsCall.join('')).then(function (response) {\n        return response.json();\n      }).then(_this.storeAPIResults.bind(null, 'violations'));\n    };\n\n    _this.storeAPIResults = function (source, records) {\n      var tempState = _this.state;\n\n      switch (source) {\n        case 'violations':\n        case 'visits':\n          tempState[source] = records;\n          break;\n\n        default:\n          throw new Error('Unable to store the \"' + source + '\" type API results.');\n          break;\n      }\n\n      _this.setState(tempState); // Check, if we have both the violations and the vists lets combine them into a date ordered list for a nice table or something\n\n\n      if (tempState.visits !== null && tempState.violations !== null) {\n        _this.combineVisitsViolations();\n      }\n    };\n\n    _this.combineVisitsViolations = function () {\n      var combinedTemp = {};\n\n      _this.state.visits.forEach(function (a, b, c) {\n        console.log(a, b, c);\n      });\n\n      console.log('we can combine now...');\n      console.log(_this.state);\n    };\n\n    _this.state = {\n      'license': props.match.params.license,\n      'visits': null,\n      'violations': null,\n      'vvOrdered': null\n    };\n\n    _this.getVisits();\n\n    _this.getViolations();\n\n    return _this;\n  } // This will query the API and get a list of vists, this data is pretty slim but it'll be good to have a idea of how often v how many violations\n\n\n  _createClass(Detail, [{\n    key: \"render\",\n    value: function render() {\n      console.log(this);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"This is going to be the details page for lic#\", this.state.license));\n    }\n  }]);\n\n  return Detail;\n}(Component);\n\nexport default Detail;","map":{"version":3,"sources":["/Users/phillip/Development/vhosts/playground.develop/good-green/src/components/details/index.js"],"names":["React","Component","SearchResult","Detail","props","getVisits","visitsCall","push","state","license","fetch","join","then","response","json","storeAPIResults","bind","getViolations","violationsCall","source","records","tempState","Error","setState","visits","violations","combineVisitsViolations","combinedTemp","forEach","a","b","c","console","log","match","params"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n// import { Link } from 'react-router-dom'\n// import { push } from 'connected-react-router'\n// import { bindActionCreators } from 'redux'\n// import { connect } from 'react-redux'\n// import ReactTable from \"react-table\";\n\n// Components\nimport SearchResult from '../search-result'\n\nclass Detail extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\t'license': props.match.params.license,\n\t\t\t'visits': null,\n\t\t\t'violations': null,\n\t\t\t'vvOrdered': null\n\t\t}\n\t\tthis.getVisits();\n\t\tthis.getViolations();\n\t}\n\n\t// This will query the API and get a list of vists, this data is pretty slim but it'll be good to have a idea of how often v how many violations\n\tgetVisits = () => {\n\t\tlet visitsCall = ['https://data.lcb.wa.gov/resource/w7wg-8m52.json?'];\n\t\tvisitsCall.push('$where=license_number = \"'+this.state.license+'\" ')\n\t\tvisitsCall.push('&$order=date desc')\n\t\tfetch(visitsCall.join('')).then(response => response.json()).then(this.storeAPIResults.bind(null,'visits'))\n\t}\n\n\t// This will query the API and get a list of violations, then call the store function to store it appropriatly\n\tgetViolations = () => {\n\t\tlet violationsCall = ['https://data.lcb.wa.gov/resource/dgm4-3cm6.json?'];\n\t\tviolationsCall.push('$where=license_number = \"'+this.state.license+'\" ')\n\t\tviolationsCall.push('&$order=visit_date desc')\n\t\tfetch(violationsCall.join('')).then(response => response.json()).then(this.storeAPIResults.bind(null,'violations'))\n\t}\n\n\t// This will store the API results depending on the call\n\tstoreAPIResults = (source,records) => {\n\t\tlet tempState = this.state;\n\t\tswitch(source){\n\t\t\tcase 'violations':\n\t\t\tcase 'visits':\n\t\t\t\ttempState[source] = records\n\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error('Unable to store the \"'+source+'\" type API results.');\n\t\t\tbreak;\n\t\t}\n\t\tthis.setState(tempState);\n\t\t// Check, if we have both the violations and the vists lets combine them into a date ordered list for a nice table or something\n\t\tif(tempState.visits!==null && tempState.violations!==null){\n\t\t\tthis.combineVisitsViolations()\n\t\t}\n\t}\n\n\t// This will look through the visits and violcations and create a array of references to them thats ordered by date for display\n\tcombineVisitsViolations = () => {\n\t\tlet combinedTemp = {}\n\t\tthis.state.visits.forEach((a,b,c) => {\n\t\t\tconsole.log(a,b,c)\n\t\t})\n\n\t\t\tconsole.log('we can combine now...')\n\t\t\tconsole.log(this.state)\n\n\t}\n\n\trender(){ \n\t\tconsole.log(this)\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h2>This is going to be the details page for lic#{this.state.license}</h2>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Detail;\n"]},"metadata":{},"sourceType":"module"}