{"ast":null,"code":"import _objectSpread from \"/Users/phillip/Development/vhosts/playground.develop/good-green/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/phillip/Development/vhosts/playground.develop/good-green/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/phillip/Development/vhosts/playground.develop/good-green/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/phillip/Development/vhosts/playground.develop/good-green/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/phillip/Development/vhosts/playground.develop/good-green/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/phillip/Development/vhosts/playground.develop/good-green/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/phillip/Development/vhosts/playground.develop/good-green/src/components/naughty-list/index.js\";\nimport React, { Component } from 'react';\nimport { ListGroup, ListGroupItem, Container, Row, Col } from 'reactstrap';\nimport SearchResult from '../search-result'; // import { push } from 'connected-react-router'\n// import { bindActionCreators } from 'redux'\n// import { connect } from 'react-redux'\n// import ReactTable from \"react-table\";\n// Components\n\nvar NaughtyList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NaughtyList, _Component);\n\n  function NaughtyList(props) {\n    var _this;\n\n    _classCallCheck(this, NaughtyList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NaughtyList).call(this, props));\n\n    _this.getLicenseDetails = function (licNum) {\n      var licDetailsCall = ['https://data.lcb.wa.gov/resource/bhbp-x4eb.json?'];\n      licDetailsCall.push('$where=license = \"' + licNum + '\" ');\n      fetch(licDetailsCall.join('')).then(function (response) {\n        return response.json();\n      }).then(_this.storeLicenseDetails);\n    };\n\n    _this.storeLicenseDetails = function (data) {\n      if (data[0] != undefined) {\n        var tempState = _this.state;\n        tempState.violators[data[0].license] = _objectSpread({}, _this.state.violators[data[0].license], data[0]);\n\n        _this.setState(tempState);\n      }\n    };\n\n    _this.getNaughty = function () {\n      var naughtyCall = ['https://data.lcb.wa.gov/resource/dgm4-3cm6.json?'];\n      naughtyCall.push('$select=license_number,wac_code,case,violation_type');\n      fetch(naughtyCall.join('')).then(function (response) {\n        return response.json();\n      }).then(_this.calculateNaughtiness);\n    };\n\n    _this.calculateNaughtiness = function (data) {\n      var tempState = _this.state;\n      data.forEach(function (violation) {\n        // If the violator is not in the object yet add it\n        if (tempState.violators[violation.license_number] === undefined) {\n          tempState.violators[violation.license_number] = {\n            'violationBreakdown': {\n              '_total': 0\n            }\n          };\n\n          _this.getLicenseDetails(violation.license_number);\n        } // Add the violations details to the violationBreakdown\n\n\n        tempState.violators[violation.license_number].violationBreakdown._total++;\n\n        if (tempState.violators[violation.license_number].violationBreakdown[violation.wac_code] === undefined) {\n          tempState.violators[violation.license_number].violationBreakdown[violation.wac_code] = 0;\n        }\n\n        tempState.violators[violation.license_number].violationBreakdown[violation.wac_code]++; // This is going to store the wac codes, that we we know what the numbers actually mean (probably will not be seen)\n\n        if (tempState.wacCodes[violation.wac_code] === undefined) {\n          tempState.wacCodes[violation.wac_code] = violation.violation_type;\n        }\n      }); // Now that we have a complete naughtyness we can create an array ot lics sorted naughtest to nicest (of the naughty)\n\n      var lics = Object.keys(tempState.violators);\n      tempState.leaderboard = lics.sort(function (a, b) {\n        return tempState.violators[b].violationBreakdown._total - tempState.violators[a].violationBreakdown._total;\n      }); // Save the state, it should not have everything it needs\n\n      tempState.processing = false;\n\n      _this.setState(tempState);\n    };\n\n    _this.displayList = function () {\n      var results = [];\n      var limit = 10;\n\n      if (!_this.state.processing) {\n        results.push(React.createElement(ListGroupItem, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, \"Making a list and checking it twice.\"));\n      } else {\n        _this.state.leaderboard.forEach(function (license) {\n          if (limit > 0) {\n            limit--;\n            results.push(React.createElement(SearchResult, {\n              data: _this.state.violators[license],\n              type: \"naughtyList\",\n              key: 'naughtyList' + license,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 90\n              },\n              __self: this\n            }));\n          }\n        });\n      }\n\n      return results;\n    };\n\n    _this.state = {\n      violators: {},\n      wacCodes: {},\n      leaderboard: [],\n      processing: true // Loop through all the licenses and grab the details we need\n\n    };\n\n    _this.getNaughty();\n\n    return _this;\n  } // This will grab the basic license information for the procided license number\n\n\n  _createClass(NaughtyList, [{\n    key: \"render\",\n    value: function render() {\n      var detailID = this.state.displayedLicense;\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"This is the naughty page, its kinda mess at the moment\")), React.createElement(ListGroup, {\n        className: 'row',\n        flush: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, this.displayList()));\n    }\n  }]);\n\n  return NaughtyList;\n}(Component);\n\nexport default NaughtyList;","map":{"version":3,"sources":["/Users/phillip/Development/vhosts/playground.develop/good-green/src/components/naughty-list/index.js"],"names":["React","Component","ListGroup","ListGroupItem","Container","Row","Col","SearchResult","NaughtyList","props","getLicenseDetails","licNum","licDetailsCall","push","fetch","join","then","response","json","storeLicenseDetails","data","undefined","tempState","state","violators","license","setState","getNaughty","naughtyCall","calculateNaughtiness","forEach","violation","license_number","violationBreakdown","_total","wac_code","wacCodes","violation_type","lics","Object","keys","leaderboard","sort","a","b","processing","displayList","results","limit","detailID","displayedLicense"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { ListGroup, ListGroupItem, Container, Row, Col } from 'reactstrap';\nimport SearchResult from '../search-result'\n// import { push } from 'connected-react-router'\n// import { bindActionCreators } from 'redux'\n// import { connect } from 'react-redux'\n// import ReactTable from \"react-table\";\n\n// Components\n\nclass NaughtyList extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tviolators: {},\n\t\t\twacCodes: {},\n\t\t\tleaderboard: [],\n\t\t\tprocessing: true,\n\t\t}\n\t\t// Loop through all the licenses and grab the details we need\n\t\tthis.getNaughty();\n\t}\n\n\t// This will grab the basic license information for the procided license number\n\tgetLicenseDetails = (licNum) => {\n\t\tlet licDetailsCall = ['https://data.lcb.wa.gov/resource/bhbp-x4eb.json?'];\n\t\tlicDetailsCall.push('$where=license = \"'+licNum+'\" ')\n\t\tfetch(licDetailsCall.join('')).then(response => response.json()).then(this.storeLicenseDetails)\n\t}\n\t// Simply saves above\n\tstoreLicenseDetails = (data) => {\n\t\tif(data[0]!=undefined){\n\t\t\tlet tempState = this.state\n\t\t\ttempState.violators[data[0].license] = {...this.state.violators[data[0].license],...data[0]}\n\t\t\tthis.setState(tempState);\n\t\t}\n\t}\n\n\t// This will look for other licenses that may have the same organization name, so we can give the option to combine.\n\tgetNaughty = () => {\n\t\tlet naughtyCall = ['https://data.lcb.wa.gov/resource/dgm4-3cm6.json?']\n\t\tnaughtyCall.push('$select=license_number,wac_code,case,violation_type');\n\t\tfetch(naughtyCall.join('')).then(response => response.json()).then(this.calculateNaughtiness)\n\t}\n\t// Determins the naughtiness of each license number, stored in a violators object, with the specific WAC codes in a seperate one\n\tcalculateNaughtiness = (data) => {\n\t\tlet tempState = this.state\n\t\tdata.forEach((violation)=>{\n\n\t\t\t// If the violator is not in the object yet add it\n\t\t\tif(tempState.violators[violation.license_number]===undefined){\n\t\t\t\ttempState.violators[violation.license_number] = {'violationBreakdown':{'_total':0}}\n\t\t\t\tthis.getLicenseDetails(violation.license_number);\n\t\t\t}\n\n\t\t\t// Add the violations details to the violationBreakdown\n\t\t\ttempState.violators[violation.license_number].violationBreakdown._total++;\n\t\t\tif(tempState.violators[violation.license_number].violationBreakdown[violation.wac_code]===undefined){\n\t\t\t\ttempState.violators[violation.license_number].violationBreakdown[violation.wac_code] = 0;\n\t\t\t}\n\t\t\ttempState.violators[violation.license_number].violationBreakdown[violation.wac_code]++;\n\n\t\t\t// This is going to store the wac codes, that we we know what the numbers actually mean (probably will not be seen)\n\t\t\tif(tempState.wacCodes[violation.wac_code]===undefined){\n\t\t\t\ttempState.wacCodes[violation.wac_code] = violation.violation_type\n\t\t\t}\n\t\t})\n\n\t\t// Now that we have a complete naughtyness we can create an array ot lics sorted naughtest to nicest (of the naughty)\n\t\tlet lics = Object.keys(tempState.violators)\n\t\ttempState.leaderboard = lics.sort((a,b)=>{\n\t\t\treturn tempState.violators[b].violationBreakdown._total - tempState.violators[a].violationBreakdown._total\n\t\t})\n\n\t\t// Save the state, it should not have everything it needs\n\t\ttempState.processing = false\n\t\tthis.setState(tempState);\n\t}\n\n\t// Simply loops to call the list and renders it out, shared the SearchResults component.\n\tdisplayList = () => {\n\t\tlet results = [];\n\t\tlet limit = 10;\n\t\tif(!this.state.processing){\n\t\t\tresults.push(<ListGroupItem>Making a list and checking it twice.</ListGroupItem>)\n\t\t}else{\n\t\t\tthis.state.leaderboard.forEach((license) => {\n\t\t\t\tif(limit>0){\n\t\t\t\t\tlimit--\n\t\t\t\t\tresults.push(<SearchResult data={this.state.violators[license]} type=\"naughtyList\" key={'naughtyList'+license}/>)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\treturn results;\n\t}\n\n\trender(){ \n\t\tlet detailID = this.state.displayedLicense;\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>This is the naughty page, its kinda mess at the moment</Col>\n\t\t\t\t</Row>\n\t\t\t\t<ListGroup className={'row'} flush>\n\t\t\t\t\t{this.displayList()}\n\t\t\t\t</ListGroup>\n\t\t\t</Container>\n\t\t)\n\t}\n}\n\nexport default NaughtyList;"]},"metadata":{},"sourceType":"module"}